		 TITLE 'EXERCISE THREE'
EXERCTHR CSECT
**********************************************************************
* AUTHOR:		HAMILTON HOLT
* DESCRIPTION:	SORTS AN ARRAY OF FULLWORDS IN ASCENDING ORDER
* 				USING THE SELECTION SORT ALGORITHM
*
* STATUS:		WORKING
**********************************************************************
*
R0		 EQU   0			'INDEX' REGISTER FOR BALR INSTRUCTION
R2		 EQU   2			R2 = INDEX REGISTER FOR OUTER LOOP
R3       EQU   3			R3 = INDEX REGISTER FOR INNER LOOP
R4		 EQU   4			R4 = REGISTER FOR ARRAY SIZE
R5       EQU   5    		R5 = INDEX REGISTER FOR MINIMUM
R6		 EQU   6 			R6 = VALUE REGISTER FOR MINIMUM 
R7       EQU   7			R7 = REGISTER FOR PLACEHOLDER
R8		 EQU   8			R8 = REGISTER FOR ARRAY SIZE - 1
R9		 EQU   9			R9 = ITERATION INDEX REGISTER
R10		 EQU   10			R10 = BOOLEAN REGISTER FOR NEED SORTING
R12	     EQU   12			BASE REGISTER
R13      EQU   13		    SAVE AREA POINTER
R14		 EQU   14 			RETURN REGISTER
*
* STANDARD ENTRY AND INITIALIZATION:
         STM   R14,R12,12(R13) SAVE REGISTERS
		 BALR  R12,R0		LOAD BASE REGISTER
		 USING BASE,R12		DECLARE BASE ADDRESS AND REGISTER
BASE	 ST    R13,SAVE+4   SAVE R13
		 LA	   R13,SAVE		R13 = ADDRESS OF SAVE AREA
* BODY:
		 LA	   R2,0						INDEX FOR OUTER LOOP
		 LA    R3,4						INDEX FOR INNER LOOP
		 LA    R4,(ARRAYEND-ARRAY)/4-1	OUTER LOOP CONTROL VARIABLE
		 LA    R8,(ARRAYEND-ARRAY)/4-1	INNER LOOP CONTROL VARIABLE
		 L     R5,=F'0'					ASSUME MIN AT FIRST INDEX
		 L     R9,=F'-1'				DECREMENT INNER LOOP CONTROL
		 
		 XDUMP ARRAY,ARRAYEND-ARRAY	 DUMP ARRAY AFTER PROCESSING
		 
OUTRLOOP L	   R6,ARRAY(R2) 		 ASSUME FIRST VALUE IS MINIMUM NUMBER
		 L     R10,=F'1'			 FALSE = NEEDS SORTING
		 
INNRLOOP C     R6,ARRAY(R3)		     COMPARE CURRENT MIN VALUE
*									 TO EACH ARRAY ENTRY
		 BNH   CONTINUE			     IF MIN =< CURRENT, BRANCH
*									 ELSE MIN > CURRENT
		 L     R6,ARRAY(R3)		     NEW MIN VALUE LOADED
	     LR    R5,R3			     NEW MIN INDEX LOADED
		 L     R10,=F'0'  		     TRUE = NEEDS SORTING

CONTINUE LA    R3,4(R3)			     INNRLOOP INDEX INCREMENTED
		 BCT   R8,INNRLOOP			 
		 C     R10,=F'0'		     CHECK IF SORTING IS NECESSARY
		 BNE   SKIPSORT					
    	 L     R7,ARRAY(R2)			 SAVE ENTRY IN ARRAY(R2)
		 ST    R6,ARRAY(R2)			 NEW MIN STORED IN ARRAY(R2)
		 ST    R7,ARRAY(R5)			 OLD ARRAY(R2) ENTRY SWAPPED
		 
SKIPSORT LA    R2,4(R2)			 	 OUTRLOOP START INDEX INCREMENTED
		 LA    R3,4(R2)				 INNRLOOP START INDEX IS RESET AND ADJUSTED
		 A	   R9,=F'-1'			 ITERATION VARIABLE DECREMENTED
		 LA    R8,(ARRAYEND-ARRAY)/4 INNRLOOP CONTROL VAR IS RESET
		 AR    R8,R9			   	 NEW ARRAY START ADJUSTED FOR
		 BCT   R4,OUTRLOOP			
		 
		 XDUMP ARRAY,ARRAYEND-ARRAY	 DUMP ARRAY AFTER PROCESSING
		 
* STANDARD EXIT:			
DONE     L     R13,SAVE+4   RESTORE R13
		 LM    R14,R12,12(R13)  RESTORE REGISTERS
		 BR    R14			RETURN
* STORAGE:
ARRAY	 DC	   F'11'		ARRAY SIZE OF 10
		 DC	   F'4'
		 DC	   F'9'
		 DC	   F'1'
		 DC	   F'10'
		 DC    F'7'
		 DC    F'14'
		 DC    F'5'
		 DC    F'12'
		 DC	   F'8'
ARRAYEND DS    0F	 
SAVE	 DS    18F			SAVE AREA
		 END   EXERCTHR
		 
		 
		 
		 
		 